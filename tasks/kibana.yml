---
- name: Kibana archive available
  get_url:
    dest: /opt
    url: https://download.elastic.co/kibana/kibana/kibana-{{ elk_kibana.version }}.tar.gz
    owner: "{{ elk_nginx.user }}"
    group: "{{ elk_nginx.user }}"
  register: new_archive_downloaded

- name: Kibana archive uncompressed
  unarchive:
    src: /opt/kibana-{{ elk_kibana.version }}.tar.gz
    dest: /opt
    copy: no
    owner: "{{ elk_nginx.user }}"
    group: "{{ elk_nginx.user }}"
  when: new_archive_downloaded|changed # should check for the extracted folder perhaps?

- name: Uncompressed Kibana linked to path
  file:
    src: /opt/kibana-{{ elk_kibana.version }}
    state: link
    path: "{{ elk_kibana.path }}"
    owner: "{{ elk_nginx.user }}"
    group: "{{ elk_nginx.user }}"

- name: Kibana files ownership
  changed_when: False
  file:
    path: /opt/kibana-{{ elk_kibana.version }}
    recurse: yes
    state: directory
    owner: "{{ elk_nginx.user }}"
    group: "{{ elk_nginx.user }}"

- name: Install sense plugin for kibana
  command: /opt/kibana/bin/kibana plugin --install elastic/sense
  ignore_errors: yes

- name: Supervisor kibana config file
  template:
    src: kibana-supervisor.j2
    dest: /etc/supervisor/conf.d/kibana.conf
    owner: root
    group: root
    mode: 644
  notify:
    - restart supervisor
    - restart kibana

- name: Generate kibana htpassword
  when: elk_kibana.user is defined and elk_kibana.password is defined
  shell: echo "{{ elk_kibana.user }}:$(openssl passwd -crypt {{ elk_kibana.password }}):kibana" | tee .kibana.htpasswd
  args:
    chdir: /etc/nginx/conf.d
    creates: /etc/nginx/conf.d/.kibana.htpasswd
  register: http_pass_gen

- name: Kibana htpassword file permissions
  file:
    path: /etc/nginx/conf.d/.kibana.htpasswd
    owner: "{{ elk_nginx.user }}"
    group: root
    mode: 400
  when: http_pass_gen|changed
  notify: restart kibana

- name: Nginx config file
  template:
    src: kibana-default.j2
    dest: /etc/nginx/conf.d/kibana.conf
    owner: root
    group: root
    mode: 644
  notify: restart nginx
